diff --git a/CMakeLists.txt b/CMakeLists.txt
index af53a26..424aaf0 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -45,6 +45,10 @@ project(LLVM
   VERSION ${LLVM_VERSION_MAJOR}.${LLVM_VERSION_MINOR}.${LLVM_VERSION_PATCH}
   LANGUAGES C CXX ASM)
 
+if (LLVM_EXPORT_SYMBOLS_FOR_PLUGINS)
+  add_definitions(-DEXPORT_SYMBOLS)
+endif()
+
 set(CMAKE_CXX_STANDARD 14 CACHE STRING "C++ standard to conform to")
 set(CMAKE_CXX_STANDARD_REQUIRED YES)
 if (CYGWIN)
diff --git a/include/llvm/IR/PassManager.h b/include/llvm/IR/PassManager.h
index 8e592bf..e98ec5a 100644
--- a/include/llvm/IR/PassManager.h
+++ b/include/llvm/IR/PassManager.h
@@ -34,6 +34,8 @@
 ///
 //===----------------------------------------------------------------------===//
 
+#pragma warning( disable : 4251 )
+
 #ifndef LLVM_IR_PASSMANAGER_H
 #define LLVM_IR_PASSMANAGER_H
 
@@ -63,6 +65,12 @@
 
 namespace llvm {
 
+#ifdef EXPORT_SYMBOLS
+  #define DLL_API __declspec(dllexport)
+#else
+  #define DLL_API __declspec(dllimport)
+#endif
+
 /// A special type used by analysis passes to provide an address that
 /// identifies that particular analysis pass type.
 ///
@@ -100,8 +108,8 @@ private:
 
 template <typename IRUnitT> AnalysisSetKey AllAnalysesOn<IRUnitT>::SetKey;
 
-extern template class AllAnalysesOn<Module>;
-extern template class AllAnalysesOn<Function>;
+template class DLL_API AllAnalysesOn<Module>;
+template class DLL_API AllAnalysesOn<Function>;
 
 /// Represents analyses that only rely on functions' control flow.
 ///
@@ -152,7 +160,7 @@ private:
 ///     // The analysis has been successfully preserved ...
 ///   }
 /// ```
-class PreservedAnalyses {
+class DLL_API PreservedAnalyses {
 public:
   /// Convenience factory function for the empty preserved set.
   static PreservedAnalyses none() { return PreservedAnalyses(); }
@@ -1017,8 +1025,8 @@ bool FunctionAnalysisManagerModuleProxy::Result::invalidate(
 
 // Ensure the \c FunctionAnalysisManagerModuleProxy is provided as an extern
 // template.
-extern template class InnerAnalysisManagerProxy<FunctionAnalysisManager,
-                                                Module>;
+template class DLL_API InnerAnalysisManagerProxy<FunctionAnalysisManager,
+                                                 Module>;
 
 /// An analysis over an "inner" IR unit that provides access to an
 /// analysis manager over a "outer" IR unit.  The inner unit must be contained
