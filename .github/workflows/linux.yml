name: Linux Test Suite

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  linux-tests:
    name: "LLVM ${{ matrix.llvm-version[0] }} Linux"
    runs-on: ubuntu-latest
    env:
      LLVM_INSTALL_PATH: ~/llvm
      PLUGINS_PATH: tests/plugins/target/debug
    strategy:
      matrix:
        llvm-version:
          - ["10", "10-0", "v10.0.1-rust-1.46/llvm-10.0.1-rust-1.46-linux.tar.gz"]
          - ["11", "11-0", "v11.0.1-rust-1.51/llvm-lld-11.0.1-rust-1.51-linux.tar.gz"]
          - ["12", "12-0", "v12.0.1-rust-1.55/llvm-lld-12.0.1-rust-1.55-linux.tar.gz"]
          - ["13", "13-0", "v13.0.0-rust-1.59/llvm-lld-13.0.0-rust-1.59-linux.tar.gz"]
          - ["14", "14-0", "v14.0.6-rust-1.64/llvm-lld-14.0.6-rust-1.64-linux.tar.gz"]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup LLVM Installation Path
        run: |
          mkdir ${{ env.LLVM_INSTALL_PATH }}
          echo "$HOME/llvm/bin" >> $GITHUB_PATH

      - name: Check LLVM Artifacts In Cache
        id: cache-llvm
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.LLVM_INSTALL_PATH }}/bin/llvm-config
            ${{ env.LLVM_INSTALL_PATH }}/bin/opt
            ${{ env.LLVM_INSTALL_PATH }}/lib/libLLVM-${{ matrix.llvm-version[0] }}.so
            ${{ env.LLVM_INSTALL_PATH }}/include
          key: ${{ runner.os }}-llvm-${{ matrix.llvm-version[0] }}

      - name: Download LLVM Binaries
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        run: |
          wget --user-agent='GithubCI' -O llvm.tar.gz https://github.com/jamesmth/llvm-project/releases/download/${{ matrix.llvm-version[2] }}
          tar -C ~ -xf llvm.tar.gz

      - name: Build Tests
        run: |
          ln -s libLLVM-${{ matrix.llvm-version[0] }}.so ${{ env.LLVM_INSTALL_PATH }}/lib/libLLVM.so || true
          cargo b \
            --manifest-path tests/plugins/Cargo.toml \
            -p plugin* \
            --no-default-features \
            --features target-x86,llvm${{ matrix.llvm-version[1] }}

      - name: Run Tests
        run: |
          opt \
            --load-pass-plugin="${{ env.PLUGINS_PATH }}/libplugin1.so" \
            --passes="mpass,function(fpass)" \
            tests/test.ll \
            -disable-output
          opt \
            --load-pass-plugin="${{ env.PLUGINS_PATH }}/libplugin2.so" \
            --passes="mpass1,mpass2" \
            tests/test.ll \
            -disable-output
          opt \
            --load-pass-plugin="${{ env.PLUGINS_PATH }}/libplugin3.so" \
            --passes="mpass1,mpass2" \
            tests/test.ll \
            -disable-output
          opt \
            --load-pass-plugin="${{ env.PLUGINS_PATH }}/libplugin4.so" \
            --passes="mpass,function(fpass)" \
            tests/test.ll \
            -disable-output
          opt \
            --load-pass-plugin="${{ env.PLUGINS_PATH }}/libplugin5.so" \
            --passes="mpass,function(fpass)" \
            tests/test.ll \
            -disable-output
          opt \
            --load-pass-plugin="${{ env.PLUGINS_PATH }}/libplugin6.so" \
            --passes="default<O3>" \
            tests/test.ll \
            -disable-output
